"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var express = require("express");
var linetwork_1 = require("linetwork");
;
var NetManager = (function (_super) {
    __extends(NetManager, _super);
    function NetManager(conf) {
        _super.call(this, conf);
    }
    NetManager.prototype.Router = function () {
        var NetManager = this;
        var Router = express.Router();
        Router.get('/connect/:recovery', function (req, res) {
            NetManager.connection().then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.get('/list', function (req, res) {
            NetManager.networks().then(function (n) {
                res.send(n);
            }).then(function (err) {
                res.send(err);
            });
        });
        Router.get('/mobile/providers', function (req, res) {
            res.send(NetManager.mobileproviders());
        });
        Router.get('/mobile/providers/country/:country', function (req, res) {
            var providers = NetManager.mobileproviders();
            res.send(providers.country(req.params.country));
        });
        Router.get('/recovery', function (req, res) {
            NetManager.recovery().then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.post('/configuration', function (req, res) {
            console.log('Manager home page');
        });
        Router.get('/wifi/wpa', function (req, res) {
            var wpamanager = NetManager.wpamanager();
            res.send(wpamanager.listwpa);
        });
        Router.post('/wifi/wpa/add', function (req, res) {
            var wpamanager = NetManager.wpamanager();
            wpamanager.addwpa(req.params.ssid, req.params.password, req.params.priority).then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.post('/wifi/wpa/remove/:ssid', function (req, res) {
            var wpamanager = NetManager.wpamanager();
            wpamanager.removewpa(req.params.ssid).then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        return Router;
    };
    return NetManager;
}(linetwork_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = NetManager;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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aWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgbGluZXR3b3JrIGZyb20gXCJsaW5ldHdvcmtcIjtcblxuaW50ZXJmYWNlIElQcm92aWRlciB7XG5cbiAgICBsYWJlbD86IHN0cmluZztcbiAgICBhcG46IHN0cmluZztcbiAgICBwaG9uZT86IHN0cmluZ1xuICAgIHVzZXJuYW1lPzogc3RyaW5nO1xuICAgIHBhc3N3b3JkPzogc3RyaW5nO1xuXG59XG5cbmludGVyZmFjZSBJTW9iaWxlIHtcbiAgICBwcm92aWRlcjogSVByb3ZpZGVyO1xuICAgIGRldmljZT86IGFueTtcbiAgICBjb25maWdGaWxlUGF0aD86IHN0cmluZztcbn1cbmludGVyZmFjZSBJSG9zdGFwZGNmIHtcbiAgICBkcml2ZXI6IHN0cmluZztcbiAgICBzc2lkOiBzdHJpbmc7XG4gICAgd3BhX3Bhc3NwaHJhc2U6IGFueTtcbn07XG5pbnRlcmZhY2UgQ2xhc3NPcHQge1xuICAgIHdpZmlfaW50ZXJmYWNlPzogc3RyaW5nO1xuICAgIG1vYmlsZT86IElNb2JpbGU7XG4gICAgaG9zdGFwZD86IElIb3N0YXBkY2Y7XG4gICAgd3Bhc3VwcGxpY2FudF9wYXRoPzogc3RyaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOZXRNYW5hZ2VyIGV4dGVuZHMgbGluZXR3b3JrIHtcbiAgICBOZXRNYW5hZ2VyO1xuICAgIGNvbnN0cnVjdG9yKGNvbmY6IENsYXNzT3B0KSB7XG4gICAgICAgIHN1cGVyKGNvbmYpO1xuXG4gICAgfVxuXG5cbiAgICBSb3V0ZXIoKSB7XG4gICAgICAgIGxldCBOZXRNYW5hZ2VyID0gdGhpcztcbiAgICAgICAgbGV0IFJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLy8gZGVmaW5lIHRoZSBob21lIHBhZ2Ugcm91dGVcblxuICAgICAgICBcbiAgICAgICAgUm91dGVyLmdldCgnL2Nvbm5lY3QvOnJlY292ZXJ5JywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIE5ldE1hbmFnZXIuY29ubmVjdGlvbigpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoeyBvazogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlcy5zZW5kKHsgb2s6IGZhbHNlIH0pO1xuXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIFJvdXRlci5nZXQoJy9saXN0JywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIE5ldE1hbmFnZXIubmV0d29ya3MoKS50aGVuKGZ1bmN0aW9uKG4pIHtcbiAgICAgICAgICAgICAgICByZXMuc2VuZChuKTtcbiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoZXJyKTtcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfSk7XG5cblxuXG5cbiAgICAgICAgUm91dGVyLmdldCgnL21vYmlsZS9wcm92aWRlcnMnLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgICAgICAgICAgcmVzLnNlbmQoTmV0TWFuYWdlci5tb2JpbGVwcm92aWRlcnMoKSk7XG5cbiAgICAgICAgfSk7XG4gICAgICAgIFJvdXRlci5nZXQoJy9tb2JpbGUvcHJvdmlkZXJzL2NvdW50cnkvOmNvdW50cnknLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgICAgICAgICAgbGV0IHByb3ZpZGVycyA9IE5ldE1hbmFnZXIubW9iaWxlcHJvdmlkZXJzKCk7XG4gICAgICAgICAgICByZXMuc2VuZChwcm92aWRlcnMuY291bnRyeShyZXEucGFyYW1zLmNvdW50cnkpKTtcblxuICAgICAgICB9KTtcbiAgICAgICAgUm91dGVyLmdldCgnL3JlY292ZXJ5JywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIE5ldE1hbmFnZXIucmVjb3ZlcnkoKS50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlcy5zZW5kKHsgb2s6IHRydWUgfSk7XG4gICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXMuc2VuZCh7IG9rOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0pO1xuICAgICAgICBSb3V0ZXIucG9zdCgnL2NvbmZpZ3VyYXRpb24nLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ01hbmFnZXIgaG9tZSBwYWdlJyk7XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgUm91dGVyLmdldCgnL3dpZmkvd3BhJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIGxldCB3cGFtYW5hZ2VyID0gTmV0TWFuYWdlci53cGFtYW5hZ2VyKCk7XG4gICAgICAgICAgICByZXMuc2VuZCh3cGFtYW5hZ2VyLmxpc3R3cGEpO1xuXG5cbiAgICAgICAgfSk7XG4gICAgICAgIFJvdXRlci5wb3N0KCcvd2lmaS93cGEvYWRkJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICAgICAgICAgIGxldCB3cGFtYW5hZ2VyID0gTmV0TWFuYWdlci53cGFtYW5hZ2VyKCk7XG4gICAgICAgICAgICB3cGFtYW5hZ2VyLmFkZHdwYShyZXEucGFyYW1zLnNzaWQsIHJlcS5wYXJhbXMucGFzc3dvcmQsIHJlcS5wYXJhbXMucHJpb3JpdHkpLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoeyBvazogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlcy5zZW5kKHsgb2s6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfSlcblxuICAgICAgICB9KTtcbiAgICAgICAgUm91dGVyLnBvc3QoJy93aWZpL3dwYS9yZW1vdmUvOnNzaWQnLCBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgICAgICAgICAgbGV0IHdwYW1hbmFnZXIgPSBOZXRNYW5hZ2VyLndwYW1hbmFnZXIoKTtcbiAgICAgICAgICAgIHdwYW1hbmFnZXIucmVtb3Zld3BhKHJlcS5wYXJhbXMuc3NpZCkudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXMuc2VuZCh7IG9rOiB0cnVlIH0pO1xuICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmVzLnNlbmQoeyBvazogZmFsc2UgfSk7XG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBSb3V0ZXI7XG4gICAgfVxuXG59Il19
