var express = require("express");
var linetwork = require("linetwork");
;
module.exports = (function () {
    function NetRouter(conf) {
        this.NetManager = new linetwork(conf);
    }
    NetRouter.prototype.connect = function (recovery) {
        this.NetManager.connection(recovery);
    };
    NetRouter.prototype.Router = function () {
        var NetManager = this.NetManager;
        var Router = express.Router();
        Router.get('/', function (req, res) {
            res.send('Manager home page');
        });
        Router.get('/connect', function (req, res) {
            this.NetManager.connection(req.body.recovery).then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.get('/list', function (req, res) {
            res.send(this.NetManager.networks());
        });
        Router.get('/mobile', function (req, res) {
            res.send('Manager mobile page');
        });
        Router.get('/mobile/providers', function (req, res) {
            res.send(this.NetManager.mobileproviders());
        });
        Router.get('/mobile/providers/country', function (req, res) {
            var providers = this.NetManager.mobileproviders();
            res.send(providers.country(req.body.country));
        });
        Router.get('/recovery', function (req, res) {
            this.NetManager.recovery().then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.post('/configuration', function (req, res) {
            console.log('Manager home page');
        });
        Router.get('/wifi', function (req, res) {
            res.send('Manager wifi page');
        });
        Router.get('/wifi/wpa', function (req, res) {
            var wpamanager = this.NetManager.wpamanager();
            res.send(wpamanager.list);
        });
        Router.post('/wifi/wpa/add', function (req, res) {
            var wpamanager = this.NetManager.wpamanager();
            wpamanager.add(req.body.ssid, req.body.password, req.body.priority).then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        Router.post('/wifi/wpa/remove', function (req, res) {
            var wpamanager = this.NetManager.wpamanager();
            wpamanager.remove(req.body.ssid).then(function () {
                res.send({ ok: true });
            }).catch(function () {
                res.send({ ok: false });
            });
        });
        return Router;
    };
    return NetRouter;
})();

//# sourceMappingURL=data:application/json;base64,
